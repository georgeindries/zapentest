const dotenv = require('dotenv');
const express = require('express');
const morgan = require('morgan');
const cors = require('cors');
const errorHandler = require('./middleware/error-handler');

dotenv.config({ path: './config/config.env' });

// Route files
const spider = require('./routes/spider');
const scan = require('./routes/scan');
const statistics = require('./routes/statistics');
const auth = require('./routes/auth');

const app = express();

app.use(express.json());

// Load the env variables
if (process.env.NODE_ENV === 'development') {
  app.use(morgan('dev'));
}

app.use(cors());

// Mount routers
// Application-level middleware
app.use('/auth', auth);
app.use('/spider', spider);
app.use('/scan', scan);
app.use('/statistics', statistics);

// Error Handling middleware
app.use(errorHandler);

// Access the PORT from env variables, otherwise take the default port: 5000
const PORT = process.env.PORT || 5000;

const server = app.listen(PORT, async () => {
  console.log('Server started...');
});

const callBackUnhandled = (error, promise) => {
  console.log(`Error ${error.message}`);
  server.close(() => {
    console.log('Server stoped!');
    process.exit(1);
  });
};

process.on('unhandledRejection', callBackUnhandled);
